name: Deploy and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    environment: Development
    runs-on: ubuntu-latest
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v2.3.0
        with:
          node-version: '16.x'
          
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install dependencies
        run: |
          npm install 
        working-directory: web
          
      - name: Create .env file
        run: |
          echo "GCP_PROJECT_ID=${GCP_PROJECT_ID}" >> .env
          echo "GCP_KEY_FILE_NAME=${GCP_KEY_FILE_NAME}" >> .env
          echo "GCP_USE_EMULATOR=${GCP_USE_EMULATOR}" >> .env
          echo "DATASTORE_DATASET=${DATASTORE_DATASET}" >> .env
          echo "DATASTORE_EMULATOR_HOST=${DATASTORE_EMULATOR_HOST}" >> .env
          echo "DATASTORE_EMULATOR_HOST_PATH=${DATASTORE_EMULATOR_HOST_PATH}" >> .env
          echo "DATASTORE_HOST=${DATASTORE_HOST}" >> .env
          echo "DATASTORE_PROJECT_ID=${DATASTORE_PROJECT_ID}" >> .env
          echo "API_BASE_URL=$(API_BASE_URL)" >> .env
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_KEY_FILE_NAME: ${{ vars.GCP_KEY_FILE_NAME }}
          GCP_USE_EMULATOR: true
          DATASTORE_DATASET: ${{ secrets.GCP_PROJECT_ID }}
          DATASTORE_EMULATOR_HOST: ${{ vars.DATASTORE_EMULATOR_HOST }}
          DATASTORE_EMULATOR_HOST_PATH: ${{ vars.DATASTORE_EMULATOR_HOST_PATH }}
          DATASTORE_HOST: ${{ vars.DATASTORE_HOST }}
          DATASTORE_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          API_BASE_URL: 'https://staging.${{ secrets.GCP_PROJECT_ID }}.uc.r.appspot.com'
        working-directory: web
        
      - name: Install GCP CLI
        run: |
          curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-430.0.0-linux-x86_64.tar.gz
          tar -xf google-cloud-cli-430.0.0-linux-x86_64.tar.gz
          sudo ./google-cloud-sdk/install.sh
          sudo sed -i -e 's/true/false/' /usr/lib/google-cloud-sdk/lib/googlecloudsdk/core/config.json

      #- name: Install Java JRE
      #  run: |
      #    sudo apt install default-jre
      #    sudo apt install openjdk-8-jre  

      - name: Configure GCP CLI
        run: |      
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        working-directory: web
        
      #- name: Install datastore emulator component
      #  run: |      
      #    sudo gcloud components install cloud-datastore-emulator
      #  working-directory: web

      #- name: Start local datastore emulator
      #  run: |      
      #    gcloud beta emulators datastore start --no-store-on-disk --quiet &
      #  working-directory: web
      #  env:
      #    GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      #    GCP_KEY_FILE_NAME: ${{ vars.GCP_KEY_FILE_NAME }}
      #    DATASTORE_DATASET: ${{ secrets.GCP_PROJECT_ID }}
      #    DATASTORE_EMULATOR_HOST: ${{ vars.DATASTORE_EMULATOR_HOST }}
      #    DATASTORE_EMULATOR_HOST_PATH: ${{ vars.DATASTORE_EMULATOR_HOST_PATH }}
      #    DATASTORE_HOST: ${{ vars.DATASTORE_HOST }}
      #    DATASTORE_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
   
      #- name: Run Mocha tests
      #  run: |
      #    npm run test
      #  working-directory: web
  
      #- name: Authenticate with Google Cloud
      #  env:
      #    GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      #    GCP_KEY_FILE_NAME: ${{ vars.GCP_KEY_FILE_NAME }}
      #  run: |
      #    echo "$GOOGLE_APPLICATION_CREDENTIALS" > ${{ vars.GCP_KEY_FILE_NAME }}.json
      #    gcloud auth activate-service-account --key-file=${{ vars.GCP_KEY_FILE_NAME }}.json
  
      #- name: Deploy staging to GCP App Engine
      #  run: |
      #    gcloud app deploy --version=staging --no-promote --no-stop-previous-version
      #  working-directory: web
      
      

      - name: Install K6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
        
      - name: Run K6 load tests
        run: |
          npm run loadtests
        working-directory: web

      #- name: Swap App Engine versions
      #  run: | 
      #    gcloud app services set-traffic default --splits=v1=0.9,v2=0.1 --quiet

      #- name: Upload a Build Artifact
     #   uses: actions/upload-artifact@v3.1.2
     #   with:
     #     name: revolut
     #     path: ./web
     #     if-no-files-found: error
     #     retention-days: 1
          
  #test:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Install Node.js
  #      uses: actions/setup-node@v2.3.0
  #      with:
  #        node-version: '14.x'
          
  #    - name: Download a Build Artifact
  #      uses: actions/download-artifact@v2.1.1
  #      with:
  #        name: revolut
  #        path: ./

   #   - name: Run Mocha tests
    #    run: npm run test
        
      # - name: Run K6 load tests
      #  run: k6 run loadtests
        
      #- name: Swap blue/green deployment
      #  if: ${{ success() && steps.k6.outputs.overall_result === 'successful' }}
      #  run: |
      #    eb swap development --destination-name production --verbose
