name: Test and deploy Terraform

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
  workflow_dispatch:

jobs:
  terraform:
    environment: Development
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform init
        run: |
          terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        working-directory: terraform
        
      - name: Create Terraform workspace
        if: github.event_name == 'pull_request'
        run: |
          terraform workspace new pr-${{ github.event.pull_request.number }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        working-directory: terraform
      
      - name: Terraform plan
        run: |
          terraform plan -out=tf.tfplan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        working-directory: terraform

      # - name: Terraform show to convert Terraform plan to text
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     terraform show -no-color tf.tfplan > tf.json
      #   env:
      #     GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      #   working-directory: terraform
      
      - name: Install Checkov
        run: |
          sudo apt install python3-pip
          sudo pip3 install checkov

      - name: Run Checkov
        run: |
          checkov -f tf.json
        working-directory: terraform

      - name: Terraform apply
        if: github.event_name == 'push'
        run: |
          terraform apply --auto-approve tf.tfplan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        working-directory: terraform

      - name: Switch to default Terraform workspace
        if: github.event_name == 'pull_request'
        run: |
          terraform workspace select default
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        working-directory: terraform

      - name: Delete Terraform workspace
        if: github.event_name == 'pull_request'
        run: |
          terraform workspace delete pr-${{ github.event.pull_request.number }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        working-directory: terraform
